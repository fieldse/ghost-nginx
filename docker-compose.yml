version: '3.1'

services:

  ghost:
    image: ghost:${GHOST_DOCKER_VERSION:-latest}
    container_name: ghost_blog
    hostname: ghost-blog
    # depends_on:
    #   - db
    ports:
      - ${GHOST_PORT:-8080}:2368

    volumes:
      # These are not necessesary, since Docker version can be configured with 
      # environment variables

      # Production config
      # - ./configs/ghost/config.production.json:/var/lib/ghost/config.production.json:z 
      
      # Development config
      # - ./configs/ghost/config.development.json:/var/lib/ghost/config.development.json:z 
      
      # Ghost content directory stored to /data/content
      - ./data/content:/var/lib/ghost/content:z
      
    restart: always

    environment:
      # These double-underscore syntax environment variables are used by Ghost to set nested
      # values for the configuration options.
      # eg: database__connection__host: "foo" => {database: connection: host: "foo"}
      # see https://ghost.org/docs/config/#configuration-options
      # database__client: mysql
      # database__connection__host: db
      # database__connection__user: ${MYSQL_USER}
      # database__connection__password: ${MYSQL_PASSWORD}
      # database__connection__database: ${MYSQL_DATABASE}
      # url: "${PROTOCOL:-https}://${SITE_URL:-localhost}:${PORT:-8080}"
      NODE_ENV: development # change me for production

    networks:
      - ghost
      - default


  # db:
  #   container_name: ghost_db
  #   image: mysql:${MYSQL_DOCKER_VERSION:-latest}
  #   restart: always
  #   volumes:
  #     - ./data/db:/var/lib/mysql

  #   ports:
  #     - ${MYSQL_PORT:-3306}:3306

  #   environment:
  #     MYSQL_ROOT_PASSWORD: "${MYSQL_ROOT_PASSWORD}"
  #     MYSQL_DATABASE: "${MYSQL_DATABASE}"
  #     MYSQL_USER: "${MYSQL_USER}"
  #     MYSQL_PASSWORD:  "${MYSQL_PASSWORD}"
      
  #   networks:
  #     - ghost

networks:
  default:  
  ghost:
    name: ghost_blog
